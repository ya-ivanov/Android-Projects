package com.the.color.app;

import android.os.Bundle;
import android.app.Activity;
import android.graphics.Bitmap;
import android.graphics.Color;
import android.graphics.Matrix;
import android.graphics.drawable.BitmapDrawable;
import android.graphics.drawable.Drawable;
import android.view.Menu;
import android.view.MotionEvent;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.View.OnTouchListener;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.LinearLayout;

public class MainActivity extends Activity {

	ImageView image;
	EditText colorHex;
	LinearLayout layout;

	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.activity_main);

		image = (ImageView) findViewById(R.id.image);
		colorHex = (EditText) findViewById(R.id.colorHex);
		layout = (LinearLayout) findViewById(R.id.layout);
		image.setImageResource(R.drawable.title);

		
		
		OnTouchListener imgSourceOnTouchListener = new OnTouchListener() {

			@Override
			public boolean onTouch(View view, MotionEvent event) {

				float eventX = event.getX();
				float eventY = event.getY();
				float[] eventXY = new float[] { eventX, eventY };

				Matrix invertMatrix = new Matrix();
				((ImageView) view).getImageMatrix().invert(invertMatrix);

				invertMatrix.mapPoints(eventXY);
				int x = Integer.valueOf((int) eventXY[0]);
				int y = Integer.valueOf((int) eventXY[1]);

				Drawable imgDrawable = ((ImageView) view).getDrawable();
				Bitmap bitmap = ((BitmapDrawable) imgDrawable).getBitmap();
				if (x < 0)
					x = 0;
				else if (x > bitmap.getWidth() - 1) 
					x = bitmap.getWidth() - 1;

				if (y < 0) 
					y = 0;
				else if (y > bitmap.getHeight() - 1) 
					y = bitmap.getHeight() - 1;
				

				int touchedRGB = bitmap.getPixel(x, y);

				colorHex.setBackgroundColor(touchedRGB);
				colorHex.setText(String.valueOf(touchedRGB));

				return true;
			}
		};
		
		
		
		
		
		
		
		
		image.setOnTouchListener(imgSourceOnTouchListener);

		

	}
}
